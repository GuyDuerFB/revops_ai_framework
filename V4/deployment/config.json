{
  "project_name": "revops-ai-framework",
  "region_name": "us-east-1",
  "profile_name": "FireboltSystemAdministrator-740202120544",
  "data_agent": {
    "agent_id": "NOJMSQ8JPT",
    "agent_alias_id": "BHFBAW3YMM",
    "foundation_model": "us.anthropic.claude-3-7-sonnet-20250219-v1:0",
    "description": "Data Analysis Agent V4 - Claude 3.7 with temporal analysis and business logic awareness",
    "instructions_file": "agents/data_agent/instructions.md",
    "action_groups": [
      {
        "name": "firebolt_query",
        "description": "Execute SQL queries against Firebolt data warehouse",
        "lambda_arn": "arn:aws:lambda:us-east-1:740202120544:function:revops-firebolt-query"
      },
      {
        "name": "gong_retrieval",
        "description": "Retrieve call data from Gong",
        "lambda_arn": "arn:aws:lambda:us-east-1:740202120544:function:revops-gong-retrieval"
      },
      {
        "name": "schema_lookup",
        "description": "Look up schema information from knowledge base",
        "knowledge_base_id": null
      }
    ]
  },
  "manager_agent": {
    "agent_id": "PVWGKOWSOT",
    "agent_alias_id": "LH87RBMCUQ",
    "foundation_model": "us.anthropic.claude-3-7-sonnet-20250219-v1:0",
    "description": "Manager Agent V4 - Claude 3.7 intelligent router and coordinator",
    "instructions_file": "agents/manager_agent/instructions.md",
    "agent_collaboration": "SUPERVISOR",
    "collaborators": [
      {
        "collaborator_id": "NIQUKBY9MA",
        "collaborator_name": "DataAgent",
        "agent_id": "NOJMSQ8JPT",
        "agent_alias_arn": "arn:aws:bedrock:us-east-1:740202120544:agent-alias/NOJMSQ8JPT/BHFBAW3YMM",
        "collaboration_instruction": "The DataAgent is a specialized helper that fetches structured business data on demand for the Decision Agent. It must:\n\u2022 Connect to the Firebolt data warehouse, Gong transcripts, and any approved schemas.\n\u2022 Accept concise natural-language queries (e.g., \"Query Firebolt warehouse for Bigabid's query_volume, data_processed, user_activity for the last 6 months\").\n\u2022 Return results as clean JSON or tabular objects, including field names, types, and row counts.\n\u2022 Enrich records with ICP fields (industry, employee_count, tech_stack) when available.\n\u2022 Provide short English summaries of key findings (1-3 sentences) only when asked; otherwise remain data-centric.\n\u2022 Never perform strategic reasoning, outreach generation, or webhook actions\u2014that is the Decision Agent's job.\n\u2022 Use ISO-8601 dates (YYYY-MM-DD) and SI units.\n\u2022 Assume UTC unless the request specifies a time zone.\n\u2022 Confirm when no rows are found and suggest next-step queries.\nTone: concise, factual, and machine-readable first. No marketing fluff. Refer to yourself as \"DataAgent\" in explanations.\nExample request/response pair:\nRequest \u2192 \"Please query Firebolt for ACME Corp's daily consumption (bytes_scanned) for the past 90 days.\"\nResponse \u2192 ```json { \"rows\": 90, \"columns\": [\"date\",\"bytes_scanned\"], \"data_sample\": [ [\"2025-04-04\",\"12.3 GB\"], \u2026 ] } ```",
        "relay_conversation_history": "TO_COLLABORATOR"
      },
      {
        "collaborator_id": "7NXLCQHMPL",
        "collaborator_name": "ExecutionAgent",
        "agent_id": "AINAPUEIZU",
        "agent_alias_arn": "arn:aws:bedrock:us-east-1:740202120544:agent-alias/AINAPUEIZU/RD6YGAICP0",
        "collaboration_instruction": "ExecutionAgent is a specialized helper that performs operational actions requested by the Decision Agent. It must:\n\n\u2022 Accept explicit commands such as \"Send webhook\", \"Notify AE\", \"Write to Firebolt\", or \"Update CRM field\".\n\u2022 Execute exactly what is asked\u2014no extra reasoning or data queries.\n\u2022 Return a compact JSON status object for each action: { \"action\": \"...\", \"status\": \"success|error\", \"details\": \"\u2026\" }.\n\u2022 For webhooks/notifications: include target, payload size, and correlation ID.\n\u2022 For Firebolt writes: confirm table, row count, and primary keys.\n\u2022 Log errors verbosely but NEVER halt on partial failures (continue other actions).\n\u2022 Follow idempotency: if the same action with identical parameters is received twice, treat the second as a no-op and respond \"duplicate\".\n\u2022 Never expose credentials or raw secrets.\n\u2022 Tone: terse, machine-readable first; one-sentence human note only if needed.\nExample request \u2192 \"Please execute SendNotification with { 'channel': 'Slack', 'user': 'AE_42', 'message': 'Churn risk high for Bigabid' }\"\nExample response \u2192 { \"action\": \"SendNotification\", \"status\": \"success\", \"details\": \"slack_msg_id=abc123\" }",
        "relay_conversation_history": "TO_COLLABORATOR"
      },
      {
        "collaborator_id": "FVQ8DKNJIN",
        "collaborator_name": "WebSearchAgent",
        "agent_id": "QKRQXXPJOJ",
        "agent_alias_arn": "arn:aws:bedrock:us-east-1:740202120544:agent-alias/QKRQXXPJOJ/P3UKIIHUPI",
        "collaboration_instruction": "The WebSearchAgent is a specialized helper that gathers external intelligence and company research for the Decision Agent. It must:\n\n\u2022 Accept requests for lead research, company intelligence, and market analysis\n\u2022 Use web search capabilities to find information about people, companies, and industries\n\u2022 Return structured JSON with comprehensive research findings including person intelligence, company intelligence, market context, and assessment insights\n\u2022 Focus on actionable intelligence useful for lead qualification and sales decision-making\n\u2022 Cross-reference information from multiple sources for accuracy and completeness\n\u2022 Provide data quality assessments and highlight information gaps\n\u2022 Never perform data warehouse queries, webhook actions, or strategic decision-making\u2014that is handled by other agents\n\u2022 Use search_web() for general queries and research_company() for focused company research\n\u2022 Prioritize recent information and credible sources\n\u2022 Structure findings to enable informed strategic recommendations by the Decision Agent\n\nTone: professional, structured, and intelligence-focused. Refer to yourself as \"WebSearchAgent\" in explanations.\n\nExample request \u2192 \"Please research Eldad Postan-Koren from WINN.AI for lead assessment\"\nExample response \u2192 Structured JSON with research_summary, person_intelligence, company_intelligence, market_context, assessment_insights, and data_sources sections",
        "relay_conversation_history": "TO_COLLABORATOR"
      }
    ]
  },
  "deal_analysis_agent": {
    "agent_id": "DBHYUWC6U6",
    "agent_alias_id": "SQQLCFQJUA",
    "foundation_model": "us.anthropic.claude-3-7-sonnet-20250219-v1:0",
    "description": "Deal Analysis Agent V4 - Claude 3.7 specialized deal assessment with MEDDPICC evaluation",
    "instructions_file": "agents/deal_analysis_agent/instructions.md",
    "agent_collaboration": "COLLABORATOR",
    "action_groups": [
      {
        "name": "firebolt_query",
        "description": "Execute SQL queries against Firebolt data warehouse for deal analysis",
        "lambda_arn": "arn:aws:lambda:us-east-1:740202120544:function:revops-firebolt-query"
      }
    ],
    "collaborators": [
      {
        "collaborator_id": "DATA_AGENT_COLLAB_ID",
        "collaborator_name": "DataAgent",
        "agent_id": "NOJMSQ8JPT",
        "agent_alias_arn": "arn:aws:bedrock:us-east-1:740202120544:agent-alias/NOJMSQ8JPT/BHFBAW3YMM",
        "collaboration_instruction": "DataAgent provides complex data queries beyond embedded SQL capabilities for deal analysis",
        "relay_conversation_history": "TO_COLLABORATOR"
      },
      {
        "collaborator_id": "WEB_SEARCH_COLLAB_ID",
        "collaborator_name": "WebSearchAgent",
        "agent_id": "QKRQXXPJOJ",
        "agent_alias_arn": "arn:aws:bedrock:us-east-1:740202120544:agent-alias/QKRQXXPJOJ/P3UKIIHUPI",
        "collaboration_instruction": "WebSearchAgent provides external company research and market intelligence for deal context",
        "relay_conversation_history": "TO_COLLABORATOR"
      }
    ]
  },
  "web_search_agent": {
    "agent_id": "QKRQXXPJOJ",
    "agent_alias_id": "P3UKIIHUPI",
    "foundation_model": "us.anthropic.claude-3-5-sonnet-20241022-v2:0",
    "description": "WebSearch Agent V4 - Claude 3.7 clean implementation",
    "instructions_file": "agents/web_search_agent/instructions.md",
    "action_groups": [
      {
        "name": "web_search_v3",
        "description": "Web search and company research functions",
        "lambda_arn": "arn:aws:lambda:us-east-1:740202120544:function:revops-web-search",
        "action_group_id": "QTTRZRRQ2U"
      }
    ]
  },
  "execution_agent": {
    "agent_id": "AINAPUEIZU",
    "agent_alias_id": "RD6YGAICP0",
    "foundation_model": "us.anthropic.claude-3-5-sonnet-20241022-v2:0",
    "description": "Execution Agent V4 - Claude 3.7 action execution and integration",
    "instructions_file": "agents/execution_agent/instructions.md",
    "action_groups": [
      {
        "name": "webhook_executor",
        "description": "Execute webhooks and trigger external systems",
        "lambda_arn": "arn:aws:lambda:us-east-1:740202120544:function:revops-webhook"
      },
      {
        "name": "firebolt_writer",
        "description": "Write execution results to Firebolt",
        "lambda_arn": "arn:aws:lambda:us-east-1:740202120544:function:revops-firebolt-writer"
      }
    ]
  },
  "knowledge_base": {
    "knowledge_base_id": "F61WLOYZSW",
    "schema_file_path": "knowledge_base/firebolt_schema/firebolt_schema.md",
    "storage_bucket": "revops-ai-framework-kb-740202120544",
    "storage_prefix": "revops-ai-framework/knowledge/",
    "storage_configuration": {
      "embeddingModelArn": "arn:aws:bedrock:us-east-1::foundation-model/amazon.titan-embed-text-v2:0"
    },
    "role_arn": "arn:aws:iam::740202120544:role/service-role/AmazonBedrockExecutionRoleForKnowledgeBase_akrsp"
  },
  "lambda_functions": {
    "firebolt_query": {
      "function_name": "revops-firebolt-query",
      "timeout": 60,
      "memory_size": 256,
      "source_dir": "tools/firebolt/query_lambda",
      "handler": "lambda_function.lambda_handler",
      "runtime": "python3.12",
      "environment_variables": {
        "FIREBOLT_ACCOUNT": "firebolt-dwh",
        "FIREBOLT_ENGINE_NAME": "dwh_prod_analytics",
        "FIREBOLT_DATABASE": "dwh_prod",
        "FIREBOLT_ACCOUNT_NAME": "firebolt-dwh"
      },
      "iam_role": null,
      "layers": []
    },
    "gong_retrieval": {
      "function_name": "revops-gong-retrieval",
      "timeout": 60,
      "memory_size": 256,
      "source_dir": "tools/gong/retrieval_lambda",
      "handler": "lambda_function.lambda_handler",
      "runtime": "python3.12",
      "environment_variables": {
        "GONG_CREDENTIALS_SECRET": "gong-credentials"
      },
      "iam_role": null,
      "layers": []
    },
    "webhook": {
      "function_name": "revops-webhook",
      "timeout": 60,
      "memory_size": 256,
      "source_dir": "tools/webhook",
      "handler": "lambda_function.lambda_handler",
      "runtime": "python3.12",
      "environment_variables": {},
      "iam_role": null,
      "layers": []
    },
    "firebolt_metadata": {
      "function_name": "revops-firebolt-metadata",
      "timeout": 60,
      "memory_size": 256,
      "source_dir": "tools/firebolt/metadata_lambda",
      "handler": "lambda_function.lambda_handler",
      "runtime": "python3.12",
      "environment_variables": {
        "FIREBOLT_ACCOUNT": "firebolt-dwh",
        "FIREBOLT_ENGINE_NAME": "dwh_prod_analytics",
        "FIREBOLT_DATABASE": "dwh_prod"
      },
      "iam_role": null,
      "layers": []
    },
    "firebolt_writer": {
      "function_name": "revops-firebolt-writer",
      "timeout": 60,
      "memory_size": 256,
      "source_dir": "tools/firebolt/writer_lambda",
      "handler": "lambda_function.lambda_handler",
      "runtime": "python3.12",
      "environment_variables": {
        "FIREBOLT_ACCOUNT": "firebolt-dwh",
        "FIREBOLT_ENGINE_NAME": "dwh_prod_analytics",
        "FIREBOLT_DATABASE": "dwh_prod"
      },
      "iam_role": null,
      "layers": []
    },
    "web_search": {
      "function_name": "revops-web-search",
      "function_arn": "arn:aws:lambda:us-east-1:740202120544:function:revops-web-search",
      "timeout": 30,
      "memory_size": 256,
      "source_dir": "tools/web_search",
      "handler": "lambda_function.lambda_handler",
      "runtime": "python3.12",
      "environment_variables": {},
      "iam_role": null,
      "layers": []
    },
    "deal_analysis_agent": {
      "function_name": "revops-deal-analysis-agent-v4",
      "timeout": 120,
      "memory_size": 512,
      "source_dir": "tools/deal_analysis_agent",
      "handler": "lambda_function.lambda_handler",
      "runtime": "python3.12",
      "environment_variables": {
        "FIREBOLT_QUERY_FUNCTION": "revops-firebolt-query",
        "INFERENCE_PROFILE_ID": "anthropic.claude-3-5-sonnet-20241022-v2:0",
        "DATA_AGENT_FUNCTION": "revops-data-agent",
        "WEB_SEARCH_AGENT_FUNCTION": "revops-web-search",
        "EXECUTION_AGENT_FUNCTION": "revops-webhook"
      },
      "iam_role": "arn:aws:iam::740202120544:role/revops-ai-lambda-role",
      "layers": []
    }
  },
  "execution_role_arn": "arn:aws:iam::740202120544:role/AmazonBedrockExecutionRoleForAgents_revops",
  "inference_profile": {
    "inference_profile_id": "us.anthropic.claude-3-7-sonnet-20250219-v1:0",
    "inference_profile_name": "claude-3-7-sonnet-inference-profile",
    "model_id": "us.anthropic.claude-3-7-sonnet-20250219-v1:0"
  },
  "secret_names": {
    "firebolt_credentials": "firebolt-credentials",
    "gong_credentials": "gong-credentials"
  },
  "integrations": {
    "slack_bedrock_gateway": {
      "architecture": "aws_best_practices",
      "stack_name": "revops-slack-bedrock-stack",
      "api_gateway_url": "https://s4tdiv7qrf.execute-api.us-east-1.amazonaws.com/prod/slack-events",
      "handler_lambda": "revops-slack-bedrock-handler",
      "processor_lambda": "revops-slack-bedrock-processor",
      "processing_queue": "revops-slack-bedrock-processing-queue",
      "secrets_arn": "arn:aws:secretsmanager:us-east-1:740202120544:secret:revops-slack-bedrock-secrets-372buh",
      "status": "deployed_and_tested",
      "deployment_date": "2025-07-05",
      "integration_method": "direct_agent_invocation"
    }
  },
  "deployment_status": {
    "phase_1_agents": "completed",
    "phase_2_slack_integration": "completed_aws_best_practices",
    "phase_3_permissions": "completed",
    "phase_4_lambda_fixes": "completed",
    "phase_5_multi_agent": "completed",
    "phase_6_flow_removal": "completed",
    "status": "v4_architecture_with_specialized_agents",
    "last_updated": "2025-07-20",
    "notes": "V4 Architecture: Manager Agent with full collaboration capabilities. All agents using Claude 3.7 inference profiles. Complete 4-agent collaboration working. Slack integration operational.",
    "multi_agent_setup": {
      "supervisor_agent": "TCX9CGOKBR (Manager Agent)",
      "specialized_agents": [
        "NEW_AGENT_ID (Deal Analysis Agent) - Specialized deal assessment with MEDDPICC and Claude 3.7"
      ],
      "collaborator_agents": [
        "9B8EGU46UV (DataAgent) - Data fetching and analysis",
        "7EMPGQMIDU (WebSearchAgent) - External intelligence and company research",
        "UWMCP4AYZX (ExecutionAgent) - Action execution and integration"
      ],
      "collaboration_mode": "HYBRID_ROUTING",
      "status": "v4_architecture_ready_for_deployment"
    },
    "architecture_migration": {
      "from": "broken_bedrock_flow",
      "to": "direct_agent_invocation_with_aws_best_practices",
      "benefits": [
        "Native conversation management via Bedrock sessions",
        "API Gateway + SQS + Lambda architecture",
        "Async processing with error handling",
        "Enterprise-grade monitoring and security"
      ]
    },
    "recent_improvements": [
      "Deployed AWS best practices Slack-Bedrock Gateway",
      "Removed broken Bedrock Flow (ZD1BGF8BCM)",
      "Implemented direct agent invocation with streaming",
      "Added comprehensive CloudWatch monitoring",
      "Reorganized codebase with proper separation of concerns"
    ],
    "production_ready": true,
    "slack_integration_status": "fully_deployed_and_tested"
  }
}